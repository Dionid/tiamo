
type Query {
    dummy: String
}

type MutationResponse {
    success: Boolean!
    message: String
}

input RegisterUser {
    email: String!
}

input ApproveEmailByToken {
    token: String!
    email: String!
}

input RequestPasswordlessCodeByEmail {
    email: String!
}

input LoginByPasswordlessCode {
    email: String!
    code: String!
}

type LoginByPasswordlessCodeResponse {
    token: String!
}

type Mutation {
    registerUser(req: RegisterUser): MutationResponse
    approveEmailByToken(req: ApproveEmailByToken): MutationResponse
    requestPasswordlessCodeByEmail(req: RequestPasswordlessCodeByEmail): MutationResponse
    loginByPasswordlessCode(req: LoginByPasswordlessCode): LoginByPasswordlessCodeResponse
}
